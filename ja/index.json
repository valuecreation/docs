[{"uri":"https://docs.water-gis.com/ja/setups/","title":"セットアップ","tags":[],"description":"","content":"第1章 この章ではベクタータイルオン実装に必要なこと、またどのようにオープンデータとしてベクタータイルをGithub pagesにホストしていくのかについて説明します。\n"},{"uri":"https://docs.water-gis.com/ja/setups/preparation/","title":"事前準備","tags":[],"description":"","content":"水道事業体でベクタータイルを開発するために、次からの事前準備作業を行っておく必要があります。\n"},{"uri":"https://docs.water-gis.com/ja/setups/preparation/install_postgis/","title":"PostgresSQL/PostGISデータベースのインストール","tags":[],"description":"","content":"このベクタータイルツールキットはPostgreSQL/PostGISデータベースを使用していますので、コンピュータにインストールをしてください。\n PostgreSQL PostGIS  もし新しくインストールする場合は、PostgreSQL12とPostGIS3をインストールすると良いでしょう。最低でもPostgreSQL11とPostGIS2.5が推奨です。\n"},{"uri":"https://docs.water-gis.com/ja/setups/preparation/data_collection/","title":"データ収集と、データのPostGISへの投入","tags":[],"description":"","content":"もしまだどのGISデータも持っていないのでしたら、まず最初にデータ収集を行う必要があります。もしかしたらTrimbleやGarminなどのGPSデバイスが必要になるかもしれません。しかし、次のようなスマートフォンのプリを使ってデータ収集を行うことも可能です。\n QField for QGIS: Androidで使用可能です。 Input: iOSとAndroidの両方で使用可能です。  両方ともオープンソースであり、完全にQGISと互換性があります。しかしながら、個人的にはより高度でかつユーザーフレンドリーなQFieldの使用をお勧めします。\nこちらにルワンダの地方給水におけるQFieldのとても良いケーススタディがありますので参考にしてください。\nもしデータ収集でサポートが必要でしたら、ご連絡ください。\n"},{"uri":"https://docs.water-gis.com/ja/setups/preparation/install_docker/","title":"Dockerのインストール","tags":[],"description":"","content":"このツールキットはtippecanoeというツールを使うためにDockerを使用してPostGISデータベースからベクタータイルを生成します。したがってコンピュータにはDockerをインストールする必要があります。\nDocker Desktop（Windows） 公式ウェブサイトを参照し、インストールしてください。\n インストールする際にはLinuxコンテナを選択してください(Windowsコンテナではありません!) Hyper-Vを有効にする必要があります。  Docker Desktop（MacOS） 公式ウェブサイトを参照し、Homebrewでインストールしてください。\nbrew search docker brew cask install docker Docker（Ubuntu） 公式ウェブサイトを参照し、インストールしてください。\n"},{"uri":"https://docs.water-gis.com/ja/setups/installation/","title":"インストール","tags":[],"description":"","content":"このセクションでは、ベクタータイルの実装方法についてご説明します。\nまず、次のイメージを参照し、ツールキットの全体の構成についてご覧になってください。\nシステム構成図 シーケンス図 sequenceDiagram participant db as PostGIS participant x as User participant a as postgis2mbtiles participant b as postgis2vectortiles participant d as mapbox-stylefiles participant y as Mapbox Studio participant z as gh-pages db-a: GeoJSON Note over a: tippecanoe a-x: mbtiles x-y: mbtilesアップロード y-y: Mapboxスタイル編集 Note over y: Stylefile editing x-x: postgis2vectortilesの設定変更 db-b: GeoJSON b-z: Mapboxベクタータイル(pbf tile) Note over b: gh-pagesへのアップロード y-x: MapboxスタイルとSVGのダウンロード x-x: スタイルファイルを編集し、gh-pagesにアップロード x-d: スタイルファイルの生成 x-d: スプライトファイルの生成 d-z: Mapboxスタイルとスプライトのアップロード x--x: Mapbox GL JSでのウェブアプリ開発 x-z: HTML/JavaScriptのアップロード  次に いよいよ、次から具体的なベクタータイルの実装方法について説明していきます。\n"},{"uri":"https://docs.water-gis.com/ja/setups/installation/create_vt_repository/","title":"ベクタータイル用のリポジトリ作成","tags":[],"description":"","content":"vt-boilerplateテンプレートを使用してvtを作成する  watergis/vt-boilerplateのuse this templateをクリックします あなたの組織を選択し、vtという名前で新しいリポジトリを作成します  vtリポジトリを作成後は、次からこのリポジトリ上で作業していくことになります。vt-boilerplateのなかに必要なモジュールやパッケージは含まれています。しかしながら、もし必要であればいくつかのモジュールを別々に使用していくことも可能です。\n"},{"uri":"https://docs.water-gis.com/ja/setups/installation/create_mbtiles/","title":"PostGISからmbtilesを生成する","tags":[],"description":"","content":"PostGISからmbtilesを生成する(vtで作業します)  watergis/postgis2mbtiles : このモジュールはPostGISからデータをGeoJSONで取り出しmbtilesを作成します。mapbox/tippecanoeを使用しているため、Windows環境ではmbtiles生成のためにはDockerを使います。しかし、マシンがMacOSやUbuntuの場合は直接モジュールを使うことができます。watergis/postgis2mbtiles-dockerはDockerで実行するためのソースコードです。  まず、config.js上でそれぞれのレイヤに対してSQLを作成する必要があります。そうすることで、postgis2mbtilesツールがPostGISから必要なデータを取り出して、mbtilesファイルが生成されます。\nレイヤに対する基本的な設定 次はPostGISからGeoJSONを取り出す典型的な例です。\n{ name: \u0026#39;pipeline\u0026#39;, //レイヤー名を指定してください。  geojsonFileName: __dirname + \u0026#39;/pipeline.geojson\u0026#39;, //一時的に使用するGeoJSONファイル名を使用してください。  select: ` SELECT row_to_json(featurecollection) AS json FROM ( SELECT \u0026#39;FeatureCollection\u0026#39; AS type, array_to_json(array_agg(feature)) AS features FROM ( SELECT \u0026#39;Feature\u0026#39; AS type, ST_AsGeoJSON(ST_MakeValid(x.geom))::json AS geometry, row_to_json(( SELECT t FROM ( SELECT 14 as maxzoom, 11 as minzoom ) AS t )) AS tippecanoe, row_to_json(( SELECT p FROM ( SELECT x.pipe_id as fid, x.material, x.pipe_size, x.pressure, x.construction_year, x.rehabilitation_year, x.input_date ) AS p )) AS properties FROM pipeline x WHERE NOT ST_IsEmpty(x.geom) ) AS feature ) AS featurecollection ` } 最小・最大ズームレベルを設定可能な特別なtippecanoe用の設定項目があります。\nrow_to_json(( SELECT t FROM ( SELECT 14 as maxzoom, 11 as minzoom ) AS t )) AS tippecanoe, もし座標系がEPSG:4326(WGS84)でない場合は、次のようなSQLで座標変換をしなければなりません。\nST_TRANSFORM(geom,4326) ユースケース 自身のデータベース用のSQLを作ることは、非常に重要なステップです。しかし、場合によってはこれは困難な作業になるかもしれません。次の水道事業体での設定方法の事例などが参考になるかもしれません\n Narok Water and Sewerage Services Co., Ltd, KENYA : config.js Water and Sanitation Corporation, Ltd, RWANDA : config.js Nakuru Water and Sanitation Services Co., Ltd, KENYA : config.js  このアプローとはSQL言語を使って直接PostGISからデータを取り出すので、ほとんど全ての水道事業体のGISデータベースに柔軟に対応することができます。\nベクタータイルのデザインの例 ベクタータイルのデザインをどうするかはGISデータベースの設計とあなたのやりたいことによって変わってきます。次のデザインの例はベクタータイルを設計する際に参考になるかもしれません。\n Vectortiles Design for Narok water, Kenya Vectortiles Design for WASAC, Rwanda  "},{"uri":"https://docs.water-gis.com/ja/setups/installation/design_stylefile/","title":"Mapboxスタイルファイルのデザイン","tags":[],"description":"","content":"Mapbox StudioでのMapboxスタイルファイルのデザイン 次に、一つ前のステップで生成したmbtileを使ってMapbox StudioでMapboxスタイルをデザインします。\nより美しい地図をデザインするためには、自分たちのレイヤー専用にアイコンをデザインする必要があるかもしれません。次のアイコンはもしかしたら参考になるかもしれません。\n Narok Water and Sewerage Services Co., Ltd, KENYA : narwassco/water-icons Water and Sanitation Corporation, Ltd, RWANDA : WASAC/water-icons Nakuru Water and Sanitation Services Co., Ltd, KENYA : nakuruwater/water-icons  またMapbox Studioのアカウントも作る必要があります。その際はあなた自身のパブリックアクセストークンをしっかりと管理してください。\nこちらのMapbox Studioの公式マニュアルを参照してください。\nスタイルファイルを最終化するためにmbtilesの生成とMapbox Studioでのスタイリングのプロセスを何度も繰り返す必要があるかもしれません。\n"},{"uri":"https://docs.water-gis.com/ja/setups/installation/deploy_vectortiles/","title":"ベクタータイルのgh-pagesへのデプロイ","tags":[],"description":"","content":"ベクタータイルのgh-pagesへのデプロイ(vtで作業) スタイルファイルのデザインとmbtilesが完成したら、いよいよベクタータイルをgh-pagesにデプロイします。postgis2vectortilesのモジュールがベクタータイルの生成とデプロイを一貫して行なってくれます。\nデプロイするには二つのケースがあります。\ngraph LR A[mbtiles] -- B{対象エリアは大きいですか?} B --|いいえ|C[narwassco/vt-map] B --|はい|D[wasac/vt] C --|ローカルでタイルを生成します|E[gh-pages] D --|mbtilesをアップロード|F[github masterブランチ] F --|Github Actionsでタイルを生成します|E  i. [narwassco/vt-mapアプローチ] ケニアのナロックウォーターの場合 もし対象エリアが狭い場合は、ナロックウォーターのアプローチでデプロイすることができます。次のリポジトリを参照してください。\n narwassco/vt-map これは次のモジュールを使用してMapboxベクタータイルを生成し、gh-pagesにデプロイします。  watergis/postgis2mbtiles: PostGISからmbtilesを生成します。 watergis/mbtiles2pbf: mbtilesをpbf(mvt)タイルに変換します。    このモジュールはmapbox/tippecanoeを使用してmbtilesを生成します。しかしながら、ナロックウォーターのGISマシンはWindows10 Proのため、tippecanoeの実行が困難であり、Dockerを使用してベクタータイルを生成するツールを開発しました。\nii. [WASAC/vtアプローチ] ルワンダのWASACの場合 (推奨) もし対象エリアが広い場合は、Github pagesに数千のベクタータイルをデプロイすることは容易ではないでしょう。WASACのアプローチを使って、mbtilesを先にアップロードした後、Github Actionsでmbtilesからベクタータイルを取り出すと良いです。次に示すリポジトリをご覧になってください。\n WASAC/vt これは次のモジュールを使用してMapboxベクタータイルを生成し、gh-pagesにデプロイします。  watergis/postgis2mbtiles: PostGISからmbtilesを生成します。 postgis2mbtilesモジュールはローカルマシンに実行します。 watergis/mbtiles2pbf: mbtilesをpbf(mvt)タイルに変換します。 mbtiles2pbfはGithub Actionsで実行します。    次のものはナロックウォーターが使用しているGithub Actionsでmbtilesタイルからpbfタイルを生成しデプロイするためのワークフローファイルです。\nname: Node.js CI on: push: branches: [ master ] jobs: build: runs-on: ubuntu-latest steps: - uses: actions/checkout@v2 - name: Use Node.js uses: actions/setup-node@v1 with: node-version: 12.x - run: npm ci env: NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}} - run: npm run extract - name: configure git and deploy env: NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}} run: | git config --global user.name \u0026#34;narwassco+githubci\u0026#34; git config --global user.email \u0026#34;narwassco+githubci@users.noreply.github.com\u0026#34; git remote set-url origin https://x-access-token:${NODE_AUTH_TOKEN}@github.com/narwassco/vt.git npm run deploy   ナロックウォーターも[narwassco/vt-mapアプローチ]の代わりに、[WASAC/vtアプローチ]を使い始めました。\n narwassco/vt    ナクルウォーターも[WASAC/vtアプローチ]を使い始めました。\n nakuruwater/vt    "},{"uri":"https://docs.water-gis.com/ja/setups/installation/deploy_stylefile_sprite/","title":"Mapboxスタイルファイルとスプライトファイルのgh-pagesへのデプロイ","tags":[],"description":"","content":"5. Mapboxスタイルファイルとスプライトファイルのgh-pagesへのデプロイ   watergis/sprite-creater : このモジュールがアイコンからスプライトファイルを作ってくれます。\n  mapbox-stylefilesという名前のリポジトリを作成してください。 その上で次のような構成でスタイルファイルとスプライトファイルを配置します。\n  |- docs |- satellite |- sprite |- sprite.json |- sprite.png |- sprite@2x.json |- sprite@2x.png |- sprite@4x.json |- sprite@4x.png |- style.json |- street |- sprite |- sprite.json |- sprite.png |- sprite@2x.json |- sprite@2x.png |- sprite@4x.json |- sprite@4x.png |- style.json |- src |- config.js |- sprite-create.js ユースケース 次のようなユースケースがあります。それらのいくつかをフォークして必要に応じて変えていくと良いかもしれません。\n Narok Water and Sewerage Services Co., Ltd, KENYA : narwassco/mapbox-stylefiles Water and Sanitation Corporation, Ltd, RWANDA : WASAC/mapbox-stylefiles Nakuru Water and Sanitation Services Co., Ltd, KENYA : nakuruwater/mapbox-stylefiles  アイコンからスプライトファイルを作成する スプライトファイルはmapbox/makiアイコンとwater-iconsアイコンから作成され、このリポジトリのdocsフォルダ配下にできます。UNVTのベースマップはmapbox/makiアイコンを使っています。ナロックウォーターのケースでは次のリポジトリでスタイルファイルで使われるアイコンを管理しています。\n narwassco/water-icons : 水道施設ようにカスタマイズされたアイコンを含みます。 narwassco/mapbox-street-icons : Mapbox Streetスタイルのアイコンを含みます。 narwassco/mapbox-satellite-icons:Mapbox Satelliteスタイルのアイコンを含みます。  Mapboxスタイルファイルを配置する Mapbox StudioからMapboxスタイルファイルをダウンロードした後、そのスタイルファイルから不要なコンテンツを削除し、ベクタータイルとスプライトファイルのURLを変更します。\n特に、次のsources、spriteとglyphsのプロパティは必ず変更しなければなりません。\n\u0026#34;sources\u0026#34;: { \u0026#34;composite\u0026#34;: { \u0026#34;url\u0026#34;: \u0026#34;mapbox://mapbox.mapbox-streets-v8,mapbox.mapbox-terrain-v2\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;vector\u0026#34; }, \u0026#34;assets\u0026#34;: { \u0026#34;attribution\u0026#34;: \u0026#34;©NARWASSCO,Ltd.\u0026#34;, \u0026#34;minzoom\u0026#34;: 10, \u0026#34;maxzoom\u0026#34;: 16, \u0026#34;tiles\u0026#34;: [ \u0026#34;https://narwassco.github.io/vt/tiles/{z}/{x}/{y}.mvt\u0026#34; ], \u0026#34;type\u0026#34;: \u0026#34;vector\u0026#34; } }, \u0026#34;sprite\u0026#34;: \u0026#34;https://narwassco.github.io/mapbox-stylefiles/street/sprite/sprite\u0026#34;, \u0026#34;glyphs\u0026#34;: \u0026#34;mapbox://fonts/narwassco/{fontstack}/{range}.pbf\u0026#34;, それからlayersプロパティの中のsourceの名前も変更します。\n{ \u0026#34;id\u0026#34;: \u0026#34;intake\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;fill\u0026#34;, \u0026#34;source\u0026#34;: \u0026#34;assets\u0026#34;, \u0026#34;source-layer\u0026#34;: \u0026#34;plant\u0026#34;, \u0026#34;minzoom\u0026#34;: 10, \u0026#34;filter\u0026#34;: [\u0026#34;match\u0026#34;, [\u0026#34;get\u0026#34;, \u0026#34;plant_type\u0026#34;], [\u0026#34;INTAKE\u0026#34;], true, false], \u0026#34;layout\u0026#34;: {}, \u0026#34;paint\u0026#34;: { \u0026#34;fill-color\u0026#34;: \u0026#34;hsl(0, 18%, 85%)\u0026#34;, \u0026#34;fill-outline-color\u0026#34;: \u0026#34;hsl(0, 8%, 6%)\u0026#34;, \u0026#34;fill-opacity\u0026#34;: 0.6 } } "},{"uri":"https://docs.water-gis.com/ja/setups/installation/develop_mapbox_gl_js/","title":"ウェブアプリの開発とデプロイ","tags":[],"description":"","content":"Mapbox GL JSを使ってあなた自身のウェブアプリを開発して、gh-pagesにデプロイします。\nボイラープレートを使ってリポジトリを作る watergis/mapboxgljs-boilerplateはMapbox GL JSを既に導入済みのテンプレートであり、水道事業体向けの全てのカスタマイズされたプラグインを含んでいます。このテンプレートを使うことで容易にあなた自身のリポジトリを作成できます。\n既存のリポジトリをあなたの組織にフォークする 既存の水道事業体のアプリをフォークすることも可能です。\n Narok Water and Sewerage Services Co., Ltd, KENYA : narwassco/mapbox-gl-js-client Water and Sanitation Corporation, Ltd, RWANDA : WASAC/mapbox-gl-js-client Nakuru Water and Sanitation Services Co., Ltd, KENYA : nakuruwater/mapbox-gl-js-client  このツールキット用にカスタマイズされたMapbox GL JSプラグイン 水道事業体向けのアプリのために次のプラグインを開発しました。全てのプラグインはナロックウォーターとWASACのためにmapbox-gl-js-clientに含まれています。\n watergis/mapbox-gl-print watergis/mapbox-gl-legend watergis/mapbox-gl-area-switcher watergis/mapbox-gl-pitch-toggle-control watergis/mapbox-gl-popup  ウェブアプリのデプロイプロセスの自動化 ナロックウォーターとWASACのアプリではGithub Actionを使用してgh-pagesへのデプロイを自動化しています。Circle CIやGithub Actionを使用した自動化をすることが可能です。\nGithub Actionのワークフローファイルはこちらにあります。設定の中のシークレットページで次の環境変数の登録もする必要があります。\n ACCESSTOKEN : Mapboxのアクセストークン CNAME : narok.water-gis.comのようなカスタムドメイン。自身のドメインを持っていない場合はCNAMEは不要です。  次のはGithub Actionのワークフローファイルのサンプルです。\nname: Node.js CI on: push: branches: [ master ] jobs: build: runs-on: ubuntu-latest steps: - uses: actions/checkout@v2 - name: Use Node.js uses: actions/setup-node@v1 with: node-version: 12.x - run: npm ci env: NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}} - name: configure git, build and deploy env: NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}} ACCESSTOKEN: ${{secrets.ACCESSTOKEN}} CNAME: ${{secrets.CNAME}} run: | echo \u0026#34;ACCESSTOKEN=${ACCESSTOKEN}\u0026#34; \u0026gt; .env echo \u0026#34;CNAME=${CNAME}\u0026#34; \u0026gt;\u0026gt; .env npm run build git config --global user.name \u0026#34;narwassco+githubci\u0026#34; git config --global user.email \u0026#34;narwassco+githubci@users.noreply.github.com\u0026#34; git remote set-url origin https://x-access-token:${NODE_AUTH_TOKEN}@github.com/narwassco/mapbox-gl-js-client.git npm run deploy "},{"uri":"https://docs.water-gis.com/ja/operation/","title":"ベクタータイルの運用","tags":[],"description":"","content":"第2章 この章ではベクタータイルの日常的な運用方法について説明します。\n"},{"uri":"https://docs.water-gis.com/ja/operation/automation_updating/","title":"データ更新の自動化","tags":[],"description":"","content":"デプロイのプロセスの自動化(vtで作業) WindowsのタスクスケジューラやLinuxのcrontabを使って定期的に自動でデプロイするように設定できます。そうすることでGISデータベースのメンテナンスのみにより集中できるでしょう。\ncreate_vt.batとcreate_vt.shがvt-boilerplateリポジトリの中にあります。このスクリプトをタスクスケジューラやcrontabを使って自動で実行するようにするだけです。\n"},{"uri":"https://docs.water-gis.com/ja/operation/costs/","title":"コスト","tags":[],"description":"","content":"ここではベクタータイルを実際に運用維持管理するためのコストがどうなっているのかについて説明します。\nまず、このベクタータイルのアプローチは多くの小規模な組織においては完全に無料です。\nこのシステムは完全にGithub Pagesプラットフォームに適用しています。\nこのアプリはサーバーレスで動くことができ、GithubによってHTTPSのセキュアな接続がデフォルトとなっています。基本的には全く無料で、ベクタータイル運用に必要な追加コストはありません。\nしかしながら、Github Pagesとベースマップサービスを使用するにあたっていくつかの制限事項もあります。次のページでより詳細に述べます。\n"},{"uri":"https://docs.water-gis.com/ja/operation/costs/costs_ghpages/","title":"GitHub Pagesのホスティングサービス","tags":[],"description":"","content":"Github Pagesはオープンソースプロジェクトに対しては無料ですが、いくつか制限事項があります。Github Pagesのより詳細についてはこちらをご覧ください。\n GitHub Pagesのソースリポジトリのサイズは１GBの制限があります。 公開するGitHub Pagesサイトは１GB以下である必要があります。 GitHub Pagesサイトは月当たり100GBのバンド幅の制限があります。 GitHub Pagesサイトは１時間あたりビルド１０回までの制限があります。  ケーススタディ  ルワンダ・WASACの場合 WASACのベクタータイルデータは全国で現在のところ33MB程度です。そのため使用量としては問題にはなりません。 ケニア・ナロックウォーターの場合 ナロックウォーターのベクタータイルデータは全国で現在のところ2MB程度です。そのため使用量としては問題にはなりません。  "},{"uri":"https://docs.water-gis.com/ja/operation/costs/cost_basemaps/","title":"サードパーティのベースマップの制限事項","tags":[],"description":"","content":"Mapbox Studioのベースマップの使用 このツールキットのウェブクライアントアプリのmapbox-gl-js-clientはMapbox Studioのベースマップサービスを使用しています。Mapbox Studioはオープンストリートマップベースの非常に美しいベースマップを提供してくれます。\n現在のところ、Mapbox Studioの無料プランを使用していますか、以下の制限があります。\n ウェブクライアントでの地図の読み込み : ひと月あたり50,000回まで  もし50,000回のリクエストを超えた場合は1000リクエストあたり5USDが課金されます。 より詳しい料金についてはこちらをご覧下さい。\nケーススタディ  ルワンダ・WASACの場合のコストの見積もり ひと月あたりのページビューがおおよそ41,400回であると見積もりました。水道事業の特徴から週末にも作業があることを想定して、ひと月30日として見積もりをしました。しかしながら、全ての人が毎日フルにアクセスするとは思えないため、50,000回のリクエスト制限はまだ余裕があると思われます。  仮にWASACの使用量が50,000回を超えそうな場合は、MapboxからMaptilerにベースマップサービスを変えるのも良いかもしれません。Maptilerはひと月あたり100,000まで無料で使用可能です。Maptilerの料金プランについてはこちらを参照ください。\n   組織 事業体数 利用者数/事業体 総利用者数 ページビュー/人/日 総ページビュー/日 総ページビュー/月     Districts 30 1 30 3 90 2700   POs 80 5 400 3 1200 36000   WASAC RWSS 1 30 30 3 90 2700   合計 111 36 460 - 1380 41400     ケニア・ナロックウォーターの場合のコストの見積もり ひと月あたりのページビューがおおよそ10500回であると見積もりました。ひと月あたり50,000以内に十分収まる水準です。     組織 事業体数 利用者数/事業体 総利用者数 ページビュー/人/日 総ページビュー/日 総ページビュー/月     NARWASSCO 1 70 70 5 350 10500    "},{"uri":"https://docs.water-gis.com/ja/casestudies/","title":"ケーススタディ","tags":[],"description":"","content":"第3章 この章では水道事業体のベクタータイルの実装のケーススタディを紹介します。\n"},{"uri":"https://docs.water-gis.com/ja/casestudies/narok/","title":"ケニア・ナロックウォーター","tags":[],"description":"","content":" Water Supply Map for Narok Water, KENYA 2020年6月から使用開始     ナロックウォーターのベクタータイルのデザイン 1. ベクタータイルのURL https://narwassco.github.io/vt/tiles/{z}/{x}/{y}.mvt 2. レイヤー一覧    No Layer Geometry Type Min Zoom Max Zoom Remarks     1 pipeline LineString 10 16 It includes all the types of pipeline, but you may seperate by type of pipe such as main line or secondary line if necessary.   2 meter Point 16 16 It only includes household connections.   3 flowmeter Point 14 16 It only includes flow meters to cover wider range of zoom level than consumer meters.   4 valve Point 15 16 eg. gate valve, sluice valve, air valve, non-return valve, etc.   5 firehydrant Point 15 16 It\u0026rsquo;s firehydrant layer   6 washout Point 15 16 It\u0026rsquo;s washout layer   7 tank Polygon 13 16 Distribution tank layer as Polygon. However, you might need to change geometry type to Point   8 plant Polygon 10 16 It incudes boundries of Water Treatment Plant and Water Intake   9 parcels Polygon 16 16 It is polygon of parcels data which was provided by Narok town planning office.   10 parcels_annotation Point 16 16 We seperated parcel number from other parcel data due to reducing the size of data.   11 village Polygon 10 16 Narok water is zoning some area which is called village, you may change layer name for your company.   12 dma Polygon 13 16 District Metered Area(DMA) for Non-Revenue Water Management   13 point_annotation Point 10 16 We put all the annotation data here if we need to show some label.    ナロックウォーターでは、浄水場の中にポンプ上はありますが、ポンプレイヤーがありません。ただしこれは水道事業体にとっては重要なレイヤーでもあるので、ポンプ上レイヤーも追加しても良いかもしれません。\n3. 各レイヤーの属性情報 pipeline    No Column Data Type     1 fid Integer   2 pipe_type String   3 pipesize Integer   4 material String   5 constructiondate Date   6 insertdate Date   7 updatedate Date   8 Town String    meter    No Column Data Type     1 fid Integer   2 metertype String   3 diameter String   4 zonecd String   5 connno String   6 installationdate Date   7 status String   8 customer String   9 village String   10 insertdate Date   11 updatedate Date   12 isjica Boolean    flowmeter    No Column Data Type     1 fid Integer   2 metertype String   3 diameter String   4 zonecd String   5 connno String   6 installationdate Date   7 status String   8 customer String   9 village String   10 insertdate Date   11 updatedate Date   12 isjica Boolean    valve    No Column Data Type     1 fid Integer   2 valvetype String   3 diameter String   4 installationdate Date   5 status String   6 insertdate Date   7 updatedate Date   8 isjica Boolean    firehydrant    No Column Data Type     1 fid Integer   2 size String   3 installationdate Date   4 insertdate Date   5 updatedate Date   6 isjica Boolean    washout    No Column Data Type     1 fid Integer   2 size String   3 installationdate Date   4 insertdate Date   5 updatedate Date   6 isjica Boolean    tank    No Column Data Type     1 fid Integer   2 name String   3 capacity Integer   4 servicelocation String   5 material String   6 constructiondate String   7 insertdate Date   8 updatedate Date    plant    No Column Data Type     1 fid Integer   2 name String   3 plant_type String   4 insertdate Date   5 updatedate Date    parcels    No Column Data Type     1 fid Integer   2 parcel_no Integer    parcels_annotation    No Column Data Type     1 fid Integer   2 parcel_no Integer    village    No Column Data Type     1 fid Integer   2 name String   3 area String   4 zone String   5 insertdate Date   6 updatedate Date    dma    No Column Data Type     1 fid Integer   2 name String   3 insertdate Date   4 updatedate Date    point_annotation    No Column Data Type     1 masterid Integer   2 name String   3 layer String    point_annotation layer contains the following layers\u0026rsquo; annotation.\n tank wtp intake village dma places   Copyright © 2020 Narok Water and Sewerage Services Co., Ltd., KENYA\n"},{"uri":"https://docs.water-gis.com/ja/casestudies/wasac/","title":"ルワンダ・WASAC","tags":[],"description":"","content":" Water Supply Map for WASAC RWSS, RWANDA 2020年7月から使用開始  デモ 次はWater Supply Map for WASAC RWSSのでもイメージです。    WASACのベクタータイルデザイン これはWASACのベクタータイルデザインです。 こちらからデータベースのデザインもご覧になってください。\n1. ベクタータイルのURL https://wasac.github.io/vt/tiles/{z}/{x}/{y}.mvt 2. レイヤー一覧    No Layer Min Zoom Max Zoom Geometry Type     1 pipeline 11 14 LineString   2 connection 14 14 Point   3 chamber 14 14 Point   4 watersource 12 14 Point   5 reservoir 12 14 Point   6 pumping_station 12 14 Point   7 wss 9 14 Polygon   8 wss_annotation 11 15 Point   9 district 8 14 Polygon   10 district_annotation 8 11 Point   11 sector 10 14 Polygon   12 sector_annotation 10 14 Point   13 cell 13 14 Polygon   14 cell_annotation 13 14 Point   15 village 14 14 Polygon   16 village_annotation 14 14 Point    3. 各レイヤーの属性情報 pipeline    No Column Data Type     1 fid Integer   2 material String   3 pipe_size Integer   4 pressure String   5 construction_year Integer   6 rehabilitation_year Integer   7 input_date String    connection    No Column Data Type     1 fid Integer   2 connection_type String   3 no_user Integer   4 water_meter Boolean   5 status String   6 observation String   7 elevation Integer   8 input_date String   9 construction_year Integer   10 rehabilitation_year Integer    chamber    No Column Data Type     1 fid Integer   2 chamber_type String   3 chamber_size String   4 material String   5 status String   6 observation String   7 elevation Integer   8 is_breakpressure Boolean   9 chlorination_unit Boolean   10 construction_year Integer   11 rehabilitation_year Integer   12 input_date String    watersource    No Column Data Type     1 fid Integer   2 source_type String   3 discharge Float   4 water_meter Boolean   5 status String   6 observation String   7 elevation Integer   8 chlorination_unit Boolean   9 source_protected Boolean   10 construction_year Integer   11 rehabilitation_year Integer   12 input_date String    reservoir    No Column Data Type     1 fid Integer   2 reservoir_type String   3 capacity Float   3 material String   4 water_meter Boolean   5 status String   6 observation String   7 elevation Integer   8 is_breakpressure Boolean   9 meter_installation_date String   10 chlorination_unit Boolean   11 construction_year Integer   12 rehabilitation_year Integer   13 input_date String    pumping_station    No Column Data Type     1 fid Integer   2 status String   3 head_pump String   4 power_pump String   5 discharge_pump String   6 pump_type String   7 power_source String   8 no_pump Integer   9 kva String   10 no_generator Integer   11 observation String   12 elevation Integer   13 pump_installation_date String   14 meter_installation_date String   15 capacity_antihummber String   16 water_meter Boolean   17 chlorination_unit Boolean   18 installation_antihummer Boolean   19 construction_year Integer   20 rehabilitation_year Integer   21 input_date String    wss    No Column Data Type     1 wss_id Integer   2 wss_name String   3 wss_type String   4 status String   5 description String    wss_annotation    No Column Data Type     1 wss_id Integer   2 wss_name String    district    No Column Data Type     1 dist_id Integer    district_annotation    No Column Data Type     1 dist_id Integer   2 district String    sector    No Column Data Type     1 sect_id Integer    sector_annotation    No Column Data Type     1 sect_id Integer   2 sector String    cell    No Column Data Type     1 cell_id Integer    cell_annotation    No Column Data Type     1 cell_id Integer   2 cell String    village    No Column Data Type     1 vill_id Integer    village_annotation    No Column Data Type     1 vill_id Integer   2 village String     Copyright © 2020 Water and Sanitation Corporation, Ltd., RWANDA\n"},{"uri":"https://docs.water-gis.com/ja/casestudies/nakuru/","title":"ケニア・ナクルウォーター","tags":[],"description":"","content":" Water Supply Map for Nakuru Water, KENYA 2020年8月から使用開始     ナクルウォーターのベクタータイルのデザイン 1. ベクタータイルのURL https://nakuruwater.github.io/vt/tiles/{z}/{x}/{y}.mvt  Copyright © 2020 Nakuru Water and Sanitation Services Co., Ltd., KENYA\n"},{"uri":"https://docs.water-gis.com/ja/packages/","title":"パッケージとライブラリ","tags":[],"description":"","content":"第4章 この章ではこのオープンソースプロジェクトの一覧をご紹介します。\n全てのライブラリはMITです。\n1. Mapbox GL JSクライアント関係のモジュール  watergis/mapboxgljs-boilerplate: 水道事業体向けにMapbox GL JSの実装を既に行い、全てのカスタマイズされたプラグインを含んだテンプレートです。 watergis/mapbox-gl-legend: シンプルな凡例を追加するコントロール watergis/mapbox-gl-area-switcher: エリアを簡単に切り替えるシンプルなコントロール watergis/mapbox-gl-popup: Mapbox GL JSにシンプルなポップアップを追加します watergis/mapbox-gl-print: PNGとPDFに出力できるシンプルな印刷用コントロール watergis/mapbox-gl-pitch-toggle-control: 3Dと2Dを切り替えるシンプルな3Dボタンを追加します  2. ベクタータイル関係のソフトウェア  watergis/vt-boilerplate: PostGISからベクタータイルを生成しGithubページにデプロイするテンプレート watergis/postgis2geojson: PostGISからGeoJSONを生成するモジュール watergis/postgis2mbtiles: PostGISからmbtilesを生成するモジュール watergis/postgis2mbtiles-docker: postgis2mbtilesモジュールのDocker実装 watergis/mbtiles2pbf: mbtilesをpbf(mvt)ベクタータイルに変換するモジュール watergis/postgis2vectortiles: PostGISからpbfベクタータイルをダイレクトに生成するモジュール watergis/sprite-creator: SVGアイコンからスプライトファイルを生成するモジュール  3. EPANET関係のソフトウェア  watergis/geojson2inp: GeoJSONファイルからINPファイルを生成するモジュール watergis/postgis2inp: PostGISからINPファイルを生成するモジュール  "},{"uri":"https://docs.water-gis.com/ja/license/","title":"ライセンス","tags":[],"description":"","content":"第5章 この章ではこのオープンソースプロジェクトのライセンスについて紹介します。\n1. watergis組織参加のプロジェクトのライセンス 全てのライブラリはMITに基づきます\n 2. ベクタータイルのライセンス ベクタータイルデータはCreative Commons Attribution 4.0 International Licenseライセンスに基づきます.\n もし彼らのオープンデータをご使用になりたい場合は次のようなアトリビューションを必ず使ってください。例えば、\n ケニア・ナロックウォーターのアトリビューション  Copyright (c) 2020 Narok Water and Serwerage Services Co, Ltd.  ルワンダ・WASACのアトリビューション  Copyright (c) 2020 Water and Sanitation Corporation, Ltd.  ケニア・ナクルウォーターのアトリビューション  Copyright (c) 2020 Nakuru Water and Sanitation Services Co, Ltd. また彼らのスタイルファイルをベースマップと共に使いたい場合は、次のアトリビューションも追加してください。\n(c)Mapbox, (c) OpenStreetMap contributors, Powered by the United Nations Vector Tile Toolkit 3. スタイルファイルとスプライトファイルのライセンス スタイルファイルはC0-1.0 Licenseに基づきます。しかしながら、いくつかのアイコンはMapbox Studioのものを使用しており、それらのアイコンはMapboxのライセンスに準拠します。\n  narwassco/mapbox-stylefiles: ケニア・ナロックウォーターのスタイルファイル WASAC/mapbox-stylefiles: ルワンダ・WASACのスタイルファイル nakuruwater/mapbox-stylefiles: ケニア・ナクルウォーターのスタイルファイル  スタイルファイルとスプライトファイルの使用はMapbox Style Specificationに準拠しています。\n"},{"uri":"https://docs.water-gis.com/ja/categories/","title":"Categories","tags":[],"description":"","content":""},{"uri":"https://docs.water-gis.com/ja/","title":"GIS for Water","tags":[],"description":"","content":"水道管理のためのベクタータイルツールキット このウェブサイトはMapboxベクタータイルを水道事業体向けに導入する方法を説明します。\nどのようにベクタータイルを導入していくか、そして水道事業体内でどのようにGISデータを共有していくのか、ご説明します。\nアフリカのベクタータイルベースの水道地図 まず、このオーバービューマップはベクタータイルベースの水道システムを全てまとめたものです。地図をズームして、好きなポイントをタップし、ポップアップ内のリンクから詳細な水道マップを閲覧することができます。\n現在のところ、以下の組織がこのベクタータイルを使用して、日常的に業務に活用しています。\n ケニアの2水道事業体と5つの水道システム ルワンダの1組織と1100+以上の水道システム    なぜベクタータイルなのか?  Vector tiles make huge maps fast while offering full design flexibility. They are the vector data equivalent of image tiles for web mapping, applying the strengths of tiling — developed for caching, scaling and serving map imagery rapidly — to vector data. (from Mapbox website).\n ベクタータイルは現時点で最も人気のある進んだマッピング技術であり、そのデータは非常に軽量で高速であり、柔軟に地図のデザインをすることができます。\n運用コストは一般的にラスタベースの地図配信よりも安価に済みます。\nアフリカでは、インターネットの環境が特に地方部ではまだまだ脆弱なところが多いです。このベクタータイルはそういったインターネットが脆弱な環境に最適であり、非常にスムーズに地図をPCやスマホで閲覧できます。\nこのベクタータイルツールキットのアプローチはGithub pagesを使うのでサーバーが不要であり、自前のサーバー設備などを持つことが困難なアフリカの水道事業体向けに容易に導入可能です。\nベクタータイル導入の手順   ベクタータイル導入前の準備作業\n  ベクタータイルの導入の手順\n  ベクタータイル運用時のコスト\n  このオープンソースプロジェクトへのコントリビューション このベクタータイルツールキットは Jin IGARASHI(ご興味がありましたら、私のポートフォリオをご覧ください)により開発・メンテナンスされています. ツールに対してフィードバックなどありましたら、Githubのイシューやプルリクエストなどを通してご協力いただければと思います。\nまた、もしアフリカの水道事業体向けのこのGIS活動にご賛同いただけましたら、Githubスポンサーを通してドネーションしていただけたら助かります。\n"},{"uri":"https://docs.water-gis.com/ja/tags/","title":"Tags","tags":[],"description":"","content":""},{"uri":"https://docs.water-gis.com/ja/credits/","title":"クレジット","tags":[],"description":"","content":"コントリビュータ このオープンソースプロジェクトの開発にあたり以下の方に感謝します!\n @JinIgarashiのwatergisでの開発 国連Open GISイニシアチブの国連ベクタータイルツールキットからの技術的サポート  ベクタータイルデータのメンテナンス 実際のベクタータイルデータは以下の水道事業体により運用・メンテナンスされています。また個々のベクタータイルはそれぞれのリポジトリに配置されています。\n narwassco/vt: Vectortiles for Narok Water, Kenya WASAC/vt: Vectortiles for WASAC, Rwanda nakuruwater/vt: Vectortiles for Nakuru Water, Kenya  これらの水道事業体において、GISデータの収集・メンテナンスをされている全職員に感謝いたします。\n"},{"uri":"https://docs.water-gis.com/ja/showcase/","title":"ショーケース","tags":[],"description":"","content":"次のウェブサイトはこのベクタータイルツールキットを使用したケニアとるwなんだの水道事業体の最終的なアウトプットになります。\nこのベクタータイルが水道事業体にとってどれだけパワフルかお分かりになると思います。\n Water Supply Map for Narok Water, KENYA Water Supply Map for WASAC RWSS, RWANDA Water Supply Map for Nakuru Water, KENYA  "}]