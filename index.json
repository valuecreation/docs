[{"uri":"https://github.com/watergis/watergis-docs/setups/","title":"Setups","tags":[],"description":"","content":"Chapter 1 This chapter is going to explain what is required for vectortiles implementation, and how to host your vectortiles on Github pages as open data.\n"},{"uri":"https://github.com/watergis/watergis-docs/setups/preparation/","title":"Preparations","tags":[],"description":"","content":"The following requirements must be implemented before developing vectortiles in your water services providers.\n"},{"uri":"https://github.com/watergis/watergis-docs/setups/preparation/install_postgis/","title":"Install PostgresSQL/PostGIS database","tags":[],"description":"","content":"This vectortiles toolkit uses PostgreSQL/PostGIS database. So, please try to install it in your computer.\n PostgreSQL PostGIS  If you will install new one, I think you can install PostgreSQL12 and PostGIS3.1. I recommend to use at least more than PostgreSQL11 and PostGIS2.5.\n"},{"uri":"https://github.com/watergis/watergis-docs/setups/preparation/data_collection/","title":"Data Collection and Import data into PostGIS database","tags":[],"description":"","content":"If you don\u0026rsquo;t have any GIS data yet, you must go to data collection first. You might need some GPS devices such as Trimble or Garmin. But you can also use following smartphone applications for data collection.\n QField for QGIS: It works on Android. Input: It works on both iOS and Android.  Both applications are free and open source, it is completely compatible to QGIS. However, I personally recomment to use QField which is more advanced and user friendly.\nYou can also have a look about nice case study of QField in rural water supply systems in Rwanda from here.\nIf you need some assists about data collection, please let me know.\n"},{"uri":"https://github.com/watergis/watergis-docs/setups/preparation/install_docker/","title":"Install Docker","tags":[],"description":"","content":"This toolkit uses Docker to generate vectortiles from PostGIS database in order to use tippecanoe tool. So, please install Docker in your computer.\nDocker Desktop on Windows See official webpage to install it.\n Please make sure you selected Linux container(Windows container is incorrect!) Please enable your Hyper-V in your computer.  Docker Desktop on MacOS See official webpage to install it by Homebrew.\nbrew search docker brew cask install docker Docker on Ubuntu See official webpage to install it\n"},{"uri":"https://github.com/watergis/watergis-docs/setups/installation/","title":"Installation","tags":[],"description":"","content":"In this section, we will show you how to generate vector tiles.\nFirst of all, you can understand our toolkit\u0026rsquo;s whole procedures in the below image.\nSystem Diagram Sequence Diagram of vectortiles production in the toolkits sequenceDiagram participant db as PostGIS participant x as User participant a as postgis2mbtiles participant b as postgis2vectortiles participant d as mapbox-stylefiles participant y as Mapbox Studio participant z as gh-pages db-a: GeoJSON Note over a: tippecanoe a-x: mbtiles x-y: Upload mbtiles y-y: Edit Mapbox Stylefiles Note over y: Stylefile editing x-x: configure settings for postgis2vectortiles db-b: GeoJSON b-z: Mapbox Vectortiles (pbf tile) Note over b: Upload to gh-pages y-x: Download Mapbox Stylefiles and SVG icons x-x: Edit Stylefiles for gh-pages x-d: produce Stylefiles x-d: produce sprite files d-z: Mapbox Stylefiles and Sprite files x--x: Develop Web app by Mapbox GL JS x-z: Upload HTML/JavaScript  Next Now, we are going to see detailly how to implement your own vectortiles.\n"},{"uri":"https://github.com/watergis/watergis-docs/setups/installation/create_vt_repository/","title":"Create repository for vectortiles","tags":[],"description":"","content":"Create your vt repository from vt-boilerplate template repository  click use this template on watergis/vt-boilerplate. select your organization and name vt for new repository.  After creating your own vt repository, you will work on this repository from next step. All the modules are included and packaged under vt-boilerplate. However, if you want to use some modules seperately, you can just use it.\n"},{"uri":"https://github.com/watergis/watergis-docs/setups/installation/create_mbtiles/","title":"Create mbtiles from PostGIS","tags":[],"description":"","content":"Create mbtiles from PostGIS (work on vt)  watergis/postgis2mbtiles : This module will create mbtiles by GeoJSON data which is retrieved from PostGIS. this module is using mapbox/tippecanoe, so please use Docker to generate mbtiles if your machine is Windows. But you can use the module directory in MacOS or Ubuntu machine. watergis/postgis2mbtiles-docker is the source code for Docker implementation.  First of all, you need to make SQL queries for each layer on config.js, so postgis2mbtiles tool will extract required data from PostGIS and a mbtiles will be created.\nBasic settings for a layer The below is a typical example to extract GeoJSON from PostGIS.\n{ name: \u0026#39;pipeline\u0026#39;, //specify your layer name  geojsonFileName: __dirname + \u0026#39;/pipeline.geojson\u0026#39;, //specify geojson name for temporary use  select: ` SELECT row_to_json(featurecollection) AS json FROM ( SELECT \u0026#39;FeatureCollection\u0026#39; AS type, array_to_json(array_agg(feature)) AS features FROM ( SELECT \u0026#39;Feature\u0026#39; AS type, ST_AsGeoJSON(ST_MakeValid(x.geom))::json AS geometry, row_to_json(( SELECT t FROM ( SELECT 14 as maxzoom, 11 as minzoom ) AS t )) AS tippecanoe, row_to_json(( SELECT p FROM ( SELECT x.pipe_id as fid, x.material, x.pipe_size, x.pressure, x.construction_year, x.rehabilitation_year, x.input_date ) AS p )) AS properties FROM pipeline x WHERE NOT ST_IsEmpty(x.geom) ) AS feature ) AS featurecollection ` } There is a special configuration for tippecanoe to set minimum zoom level and maximum zoom level.\nrow_to_json(( SELECT t FROM ( SELECT 14 as maxzoom, 11 as minzoom ) AS t )) AS tippecanoe, If your coordinates is not EPSG:4326(WGS84), you must transform your coordinate reference system by below SQL.\nST_TRANSFORM(geom,4326) Usecases Making your own SQLs for your database, this step is quite significant. However, it might have some difficulties to create SQLs. For your reference, you can have a look of following two water supply providers\u0026rsquo; setting.\n Narok Water and Sewerage Services Co., Ltd, KENYA : config.js Water and Sanitation Corporation, Ltd, RWANDA : config.js Nakuru Water and Sanitation Services Co., Ltd, KENYA : config.js  Because this approach can use SQL language to directly extract the data from PostGIS, it can be very frexiblely to adopt any water services providers\u0026rsquo; GIS database.\nExamples of Vectortiles Design The design of vectortiles depends on your GIS database and your needs. The below designs are just an example of vectortiles implementation for your reference.\n Vectortiles Design for Narok water, Kenya Vectortiles Design for WASAC, Rwanda  "},{"uri":"https://github.com/watergis/watergis-docs/setups/installation/design_stylefile/","title":"Design Mapbox Stylefile","tags":[],"description":"","content":"Design your Mapbox Style on Mapbox Studio Next step is to design your own Mapbox Style on Mapbox Studio by using mbtile which was produced before.\nFor better designs of beautiful water maps, you might need to design your own icons for your layers. You may use the following icons for your reference.\n Narok Water and Sewerage Services Co., Ltd, KENYA : narwassco/water-icons Water and Sanitation Corporation, Ltd, RWANDA : WASAC/water-icons Nakuru Water and Sanitation Services Co., Ltd, KENYA : nakuruwater/water-icons  You may need to create an account of Mapbox Studio. Also, please keep your public accessToken as well.\nYou can see official manual of Mapbox Studio here.\nYou may need to repeat process of genrating mbtiles and styling in Mapbox Studio for finalying your stylefiles.\n"},{"uri":"https://github.com/watergis/watergis-docs/setups/installation/deploy_vectortiles/","title":"Deploy vectortiles to gh-pages","tags":[],"description":"","content":"Deploy Vector Tile to gh-pages (work on vt) Once your stylefiles\u0026rsquo; design and mbtiles are completed, now you are ready to deploy your vector tiles to gh-pages. postgis2vectortiles will assist you to create and deploy vector tiles.\nThere are two cases for deploying.\ngraph LR A[mbtiles] -- B{Is your coverage area large?} B --|No|C[narwassco/vt-map] B --|Yes|D[wasac/vt] C --|produce tiles locally|E[gh-pages] D --|upload mbtiles|F[github master branch] F --|produce tiles by Github Actions|E  i. [narwassco/vt-map approach] A case of Narok Water, Kenya If your coverage area is small, you can use the approach of Narok Water to deploy. Please have a look following repository.\n narwassco/vt-map This module will use the following submodules to create Mapbox Vector Tile for deployment to gh-pages.  watergis/postgis2mbtiles: It creates mbtiles from PostGIS. watergis/mbtiles2pbf: It converts from mbtiles to pbf(mvt) tiles.    This module uses mapbox/tippecanoe for producing mbtiles and uses mbutil to convert mbtiles. However, Narok water\u0026rsquo;s GIS computer is Windows 10 Pro, so it is not easy to run tippecanoe, I developed Docker to create Mapbox Vector Tile.\nii. [WASAC/vt approach] A case of WASAC, Rwanda (Recommended) If your coverage area is huge, I am afraid it is not easy to deploy thousands of vector tiles to Github pages. So you can use WASAC approach to deploy mbtiles first, then use Github Actions to extract vector tiles from your mbtiles. You can see the following repository for your reference.\n WASAC/vt This module will use the following submodules to create Mapbox Vector Tile for deployment to gh-pages.  watergis/postgis2mbtiles: It creates mbtiles from PostGIS. postgis2mbtiles module will run on your local computer. watergis/mbtiles2pbf: It converts from mbtiles to pbf(mvt) tiles. mbtiles2pbf will run on Github Actions.    The below is a workflow file of Narok Water to automate deploy pbf files from mbtiles by Github Actions.\nname: Node.js CI on: push: branches: [ master ] jobs: build: runs-on: ubuntu-latest steps: - uses: actions/checkout@v2 - name: Use Node.js uses: actions/setup-node@v1 with: node-version: 12.x - run: npm ci env: NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}} - run: npm run extract - name: configure git and deploy env: NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}} run: | git config --global user.name \u0026#34;narwassco+githubci\u0026#34; git config --global user.email \u0026#34;narwassco+githubci@users.noreply.github.com\u0026#34; git remote set-url origin https://x-access-token:${NODE_AUTH_TOKEN}@github.com/narwassco/vt.git npm run deploy   Narok Water also started using [WASAC/vt approach] instead [narwassco/vt-map approach].\n narwassco/vt    Nakuru Water also started using [WASAC/vt approach].\n nakuruwater/vt    "},{"uri":"https://github.com/watergis/watergis-docs/setups/installation/deploy_stylefile_sprite/","title":"Deploy Mapbox Stylefiles and Sprite files to gh-pages","tags":[],"description":"","content":"5. Deploy Mapbox Stylefiles and Sprite files on gh-pages   watergis/sprite-creater : This module will assist you to create sprite files from your icons.\n  Please create a repository which can be named mapbox-stylefiles. You can organize stylefiles and sprite files as following structures.\n  |- docs |- satellite |- sprite |- sprite.json |- sprite.png |- sprite@2x.json |- sprite@2x.png |- sprite@4x.json |- sprite@4x.png |- style.json |- street |- sprite |- sprite.json |- sprite.png |- sprite@2x.json |- sprite@2x.png |- sprite@4x.json |- sprite@4x.png |- style.json |- src |- config.js |- sprite-create.js Use cases There are the following use cases. You may fork one of the repositories and adopted to your own needs.\n Narok Water and Sewerage Services Co., Ltd, KENYA : narwassco/mapbox-stylefiles Water and Sanitation Corporation, Ltd, RWANDA : WASAC/mapbox-stylefiles Nakuru Water and Sanitation Services Co., Ltd, KENYA : nakuruwater/mapbox-stylefiles  Create sprite files from your icons The Spritefiles will be generated from mapbox/maki icons and water-icons icons under docs of this repository. UNVT basemap is using mapbox/maki icons. In Narok Water's case, the following repositories manage our icons which are being used in our style files.\n narwassco/water-icons : It includes our own customized icon for water assets. narwassco/mapbox-street-icons : It includes icons of Mapbox Street style. narwassco/mapbox-satellite-icons:It includes icons of Mapbox Satellite style.  Put your Mapbox Stylefiles You can download your Mapbox Stylefiles from Mapbox Studio, then you can delete unnecessary contents from the stylefile, and changed url of vector tile and sprite file on it.\nParticulally, you must change sources, sprite and glyphs properties as follows.\n\u0026#34;sources\u0026#34;: { \u0026#34;composite\u0026#34;: { \u0026#34;url\u0026#34;: \u0026#34;mapbox://mapbox.mapbox-streets-v8,mapbox.mapbox-terrain-v2\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;vector\u0026#34; }, \u0026#34;assets\u0026#34;: { \u0026#34;attribution\u0026#34;: \u0026#34;©NARWASSCO,Ltd.\u0026#34;, \u0026#34;minzoom\u0026#34;: 10, \u0026#34;maxzoom\u0026#34;: 16, \u0026#34;tiles\u0026#34;: [ \u0026#34;https://narwassco.github.io/vt/tiles/{z}/{x}/{y}.mvt\u0026#34; ], \u0026#34;type\u0026#34;: \u0026#34;vector\u0026#34; } }, \u0026#34;sprite\u0026#34;: \u0026#34;https://narwassco.github.io/mapbox-stylefiles/street/sprite/sprite\u0026#34;, \u0026#34;glyphs\u0026#34;: \u0026#34;mapbox://fonts/narwassco/{fontstack}/{range}.pbf\u0026#34;, Then, you are going to layers properties to change source name.\n{ \u0026#34;id\u0026#34;: \u0026#34;intake\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;fill\u0026#34;, \u0026#34;source\u0026#34;: \u0026#34;assets\u0026#34;, \u0026#34;source-layer\u0026#34;: \u0026#34;plant\u0026#34;, \u0026#34;minzoom\u0026#34;: 10, \u0026#34;filter\u0026#34;: [\u0026#34;match\u0026#34;, [\u0026#34;get\u0026#34;, \u0026#34;plant_type\u0026#34;], [\u0026#34;INTAKE\u0026#34;], true, false], \u0026#34;layout\u0026#34;: {}, \u0026#34;paint\u0026#34;: { \u0026#34;fill-color\u0026#34;: \u0026#34;hsl(0, 18%, 85%)\u0026#34;, \u0026#34;fill-outline-color\u0026#34;: \u0026#34;hsl(0, 8%, 6%)\u0026#34;, \u0026#34;fill-opacity\u0026#34;: 0.6 } } "},{"uri":"https://github.com/watergis/watergis-docs/setups/installation/develop_mapbox_gl_js/","title":"Develop and Deploy Web Application","tags":[],"description":"","content":"You can use Mapbox GL JS to develop your own web application and delopy it to gh-pages. It is also possible for you to fork our water services providers\u0026rsquo; application.\n Narok Water and Sewerage Services Co., Ltd, KENYA : narwassco/mapbox-gl-js-client Water and Sanitation Corporation, Ltd, RWANDA : WASAC/mapbox-gl-js-client Nakuru Water and Sanitation Services Co., Ltd, KENYA : nakuruwater/mapbox-gl-js-client  Customized Mapbox GL JS Plugins for this toolkit. I developed the following plugins for the web application for water services providers. All the plugins are already included in mapbox-gl-js-client repository for Narok Water and WASAC.\n watergis/mapbox-gl-print watergis/mapbox-gl-legend watergis/mapbox-gl-area-switcher watergis/mapbox-gl-pitch-toggle-control watergis/mapbox-gl-popup  Automating deployment process for web application Both Narok water and WASAC\u0026rsquo;s applications are using Github Action to deploy the application to gh-pages automatically. You can also use Circle CI or Github Actions to automate.\nGithub Action\u0026rsquo;s workflow file is here. You also need to register environmental variable on secret page on setting.\n ACCESSTOKEN : Your Mapbox Access Token CNAME : Your custom domain like narok.water-gis.com. If you don\u0026rsquo;t have own domain, you don\u0026rsquo;t need to put CNAME.  The below is an example of Github Action\u0026rsquo;s workflow file\nname: Node.js CI on: push: branches: [ master ] jobs: build: runs-on: ubuntu-latest steps: - uses: actions/checkout@v2 - name: Use Node.js uses: actions/setup-node@v1 with: node-version: 12.x - run: npm ci env: NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}} - name: configure git, build and deploy env: NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}} ACCESSTOKEN: ${{secrets.ACCESSTOKEN}} CNAME: ${{secrets.CNAME}} run: | echo \u0026#34;ACCESSTOKEN=${ACCESSTOKEN}\u0026#34; \u0026gt; .env echo \u0026#34;CNAME=${CNAME}\u0026#34; \u0026gt;\u0026gt; .env npm run build git config --global user.name \u0026#34;narwassco+githubci\u0026#34; git config --global user.email \u0026#34;narwassco+githubci@users.noreply.github.com\u0026#34; git remote set-url origin https://x-access-token:${NODE_AUTH_TOKEN}@github.com/narwassco/mapbox-gl-js-client.git npm run deploy "},{"uri":"https://github.com/watergis/watergis-docs/operation/","title":"Operations","tags":[],"description":"","content":"Chapter 2 This chapter will show you how to operate vector tiles daily.\n"},{"uri":"https://github.com/watergis/watergis-docs/operation/automation_updating/","title":"Automate data up to date","tags":[],"description":"","content":"Automate the process of deployment (work on vt) You can use Task Scheduler of Windows or crontab of Linux to automate your deployment process to be implemented frequently. So you can just concentrate to maintain GIS database.\nThere is create_vt.bat and create_vt.sh under vt-boilerplate repository. You can automate to launch this script by using Task Scheduler or crontab.\n"},{"uri":"https://github.com/watergis/watergis-docs/operation/costs/","title":"Costs","tags":[],"description":"","content":"Here, we are going to show you how is the actual operation \u0026amp; maintenance costs for vectortiles.\nFirst of all, this vectortiles approach is completely free of charge in most of small organization.\nThis system is fully adopted to GitHub Pages platform.\nThis application can work without server, and Github provides HTTPS secure connection as default. Basically, it costs completely free of charge, you don\u0026rsquo;t need additional fees for operating vectortiles services.\nHowever, there are some limits in GitHub Pages and BaseMap services. We are going to see details from next page.\n"},{"uri":"https://github.com/watergis/watergis-docs/operation/costs/costs_ghpages/","title":"Hosting Service of GitHub Pages","tags":[],"description":"","content":"Although GitHub Pages is free of charges for an Open Source Project, there are some usage limits. See more details about GitHub Pages here.\n GitHub Pages source repositories have a recommended limit of 1GB. Published GitHub Pages sites may be no larger than 1 GB. GitHub Pages sites have a soft bandwidth limit of 100GB per month. GitHub Pages sites have a soft limit of 10 builds per hour.  Case Studies  In case of WASAC, Rwanda WASAC\u0026rsquo;s Vectortiles data in the whole country is currently only approximately 33MB. So I think our usage should not be a problem. In case of Narok Water, Kenya Narok Water\u0026rsquo;s Vectortiles data is currently only approximately 2MB. So I think our usage should not be a problem.  "},{"uri":"https://github.com/watergis/watergis-docs/operation/costs/cost_basemaps/","title":"Limitation of Base map from third-party map","tags":[],"description":"","content":"Usage of Base map from Mapbox Studio Our vectortiles client application mapbox-gl-js-client is using base map services of Mapbox Studio. Mapbox Studio can provides very beautiful vectortile based OpenStreetMap.\nCurrently, we are using free plan of Mapbox Studio. However, there are also some limits.\n Map Loads for Web : 50,000 request per month  If requests exceed 50,000, they will charge $5 USD per 1000 request. You can see more details about their pricing here.\nCase Studies  Cost Estimation in case of WASAC, Rwanda I estimated the number of page views is approximately 41,400 per month. I estimated 30 days per month because some waterworks need to be done during weekends. However, I don\u0026rsquo;t think all of people will access fully. So, 50,000 requests\u0026rsquo; limit is still enough.  If WASAC\u0026rsquo;s usage will exceed 50,000 requests, we may consider to change base map services from Mapbox to Maptiler. Maptiler will provide base map for free of charge upto 100,000 requests per month. You can see more details about Maptiler\u0026rsquo;s pricing here.\n   Organization No of Organization No of Users per Organizaiton Total No of Users Page Views per person per day Total PVs per day Estimated PV per month     Districts 30 1 30 3 90 2700   POs 80 5 400 3 1200 36000   WASAC RWSS 1 30 30 3 90 2700   Total 111 36 460 - 1380 41400     Cost Estimation in case of Narok Water, Kenya I estimated the number of page views is approximately 10500 per month. Its capacity is much enough to use within 50,000 page views per month.     Organization No of Organization No of Users per Organizaiton Total No of Users Page Views per person per day Total PVs per day Estimated PV per month     NARWASSCO 1 70 70 5 350 10500    "},{"uri":"https://github.com/watergis/watergis-docs/casestudies/","title":"Case Studies","tags":[],"description":"","content":"Chapter 3 This chapter will show you some case studies of vectortiles implementation in water services providers.\n"},{"uri":"https://github.com/watergis/watergis-docs/casestudies/narok/","title":"Narok Water, Kenya","tags":[],"description":"","content":" Water Supply Map for Narok Water, KENYA since June 2020.    "},{"uri":"https://github.com/watergis/watergis-docs/casestudies/wasac/","title":"WASAC, Rwanda","tags":[],"description":"","content":" Water Supply Map for WASAC RWSS, RWANDA since July 2020.    "},{"uri":"https://github.com/watergis/watergis-docs/casestudies/nakuru/","title":"Nakuru Water, Kenya","tags":[],"description":"","content":" Water Supply Map for Nakuru Water, KENYA since August 2020.    "},{"uri":"https://github.com/watergis/watergis-docs/categories/","title":"Categories","tags":[],"description":"","content":""},{"uri":"https://github.com/watergis/watergis-docs/credits/","title":"Credits","tags":[],"description":"","content":"Contributors Thanks to them for making Open Source Software a better place !\nAnd a special thanks to the below contributors.\n @JinIgarashi for his work on watergis United Nation Open GIS Initiative\u0026rsquo;s UN Vector Tile Toolkit to support us technically.  Packages and libraries All of libraries are under MIT license.\n1. Software for Mapbox GL JS client  watergis/mapbox-gl-legend: Add a simple legend control watergis/mapbox-gl-area-switcher: Add a simple control to switch area easier watergis/mapbox-gl-popup: add a simple popup into Mapbox GL JS. watergis/mapbox-gl-print: add a simple print control to export PNG and PDF. watergis/mapbox-gl-pitch-toggle-control: add a simple 3D button to change between 3D and 2D  2. Software for Vectortiles  watergis/vt-boilerplate: a template to create vectortiles from PostGIS and deploy it to Github pages. watergis/postgis2geojson: a module to extract GeoJSON directly from PostGIS. watergis/postgis2mbtiles: a module to extract mbtiles directly from PostGIS. watergis/postgis2mbtiles-docker: a Docker implementation for postgis2mbtiles module. watergis/mbtiles2pbf: a module to convert from mbtiles to pbf(mvt) vectortiles. watergis/postgis2vectortiles: a module to create pbf vectortiles from PostGIS directly. watergis/sprite-creator: a module to create sprite files from SVG icons.  3. Software for EPANET  watergis/geojson2inp: a module create INP file from GeoJSON files. watergis/postgis2inp: a module create INP file directly from PostGIS.  Vectortiles Implementation Actual vectortiles datas are owned by their water companies. Vectortiles data are located in following repositories.\n narwassco/vt: Vectortiles for Narok Water, Kenya WASAC/vt: Vectortiles for WASAC, Rwanda nakuruwater/vt: Vectortiles for Nakuru Water, Kenya  Thanks all of officers in the above water services providers to collect and maintain the GIS data.\nLicense of vectortiles data Those vectortiles are licensed under a Creative Commons Attribution 4.0 International License.\nIf you want to use their open data, please mention their attiribution. For instance,\n Attribution of Narok Water, Kenya  Copyright (c) 2020 Narok Water and Serwerage Services Co, Ltd.  Atribution of WASAC, Rwanda  Copyright (c) 2020 Water and Sanitation Corporation, Ltd.  Attribution of Nakuru Water, Kenya  Copyright (c) 2020 Nakuru Water and Sanitation Services Co, Ltd. Also, if you want to use our stylefiles together with base map, please put the following additional attribution on your map.\n(c)Mapbox, (c) OpenStreetMap contributors, Powered by the United Nations Vector Tile Toolkit Stylefiles and Spritefiles Those stylefiles and spritefiles are following Mapbox Style Specification. The repositories are as follows.\n narwassco/mapbox-stylefiles: Stylefiles for Narok Water, Kenya WASAC/mapbox-stylefiles: Stylefiles for WASAC, Rwanda. nakuruwater/mapbox-stylefiles: Stylefiles for Nakuru Water, Kenya  Those stylefiles are licenced under C0-1.0 License. However, we are using some icons of Mapbox Studio. So those icons which are from Mapbox, the license also belong them.\n"},{"uri":"https://github.com/watergis/watergis-docs/","title":"GIS for Water","tags":[],"description":"","content":"Vectortile Toolkits for Water Management This webiste is to show you our awesome implementations of the Mapbox Vector Tile for Water Services Providers.\nAlso, we will guide you how to implement vectortiles and to share GIS data in your water company.\nVectortile Based Water Map in Africa This is an overview map for to manage all of vectortiles of water supply system. You can zoom the map and tap any point, so you can see more detailed water supply network data from the link of popup.\nCurrently, the below orgainizations joined and are using vectortiles for their daily works.\n 2 water services providers and 5 water systems from Kenya 1 organization and 1100+ water systems from Rwanda    Demo The below is demo image of Water Supply Map for WASAC RWSS Why Vectortiles?  Vector tiles make huge maps fast while offering full design flexibility. They are the vector data equivalent of image tiles for web mapping, applying the strengths of tiling — developed for caching, scaling and serving map imagery rapidly — to vector data. (from Mapbox website).\n Vectortiles is the most popular and advanced mapping technology currently, its data is very light and fast, offering full design flexibility.\nIts operation cost is normally cheaper compare to raster tiles data distribution.\nIn Africa, Internet connection is still poor in some rural area. This vectortiles is right solution for such as poor internet situation. You can enjoy browsing smoothly in your computer or smartphones.\nOur vectortiles approach uses Github pages without servers. I know it is quite difficult for some of water services providers to have servers in Africa. This toolkits were developed for you!\nSteps for implementation of Vectortiles   Preparation before vectortiles implementation\n  How to generate vector tiles\n  Cost of Operation \u0026amp; Maintenance for Vectortiles\n  Contribution to this Open Source Project This vectortiles toolkit was developed and is maintained by Jin IGARASHI(see portfolio if you are fascinated by more details about me). If you have any feedbacks, please let me know through Github\u0026rsquo;s issues or pull request.\nAlso, if you like my GIS works for water services providers in Africa, you can make donation through Github Sponsor.\n"},{"uri":"https://github.com/watergis/watergis-docs/showcase/","title":"Showcase","tags":[],"description":"","content":"The following websites are the final outputs of vector tiles maps for water sevices providers in both Kenya and Rwanda which are using this vector tiles toolkit.\nYou will see how this vectortiles is powerful for your water services providers.\n Water Supply Map for Narok Water, KENYA Water Supply Map for WASAC RWSS, RWANDA Water Supply Map for Nakuru Water, KENYA  "},{"uri":"https://github.com/watergis/watergis-docs/tags/","title":"Tags","tags":[],"description":"","content":""}]